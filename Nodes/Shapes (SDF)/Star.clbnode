// https://iquilezles.org/articles/distfunctions2d/
/// 
INPUT float `Size`; ///
INPUT int `Branches`;
INPUT float `Pointiness`;
INPUT float `Roundness`;

SignedDistance main(UV uv)
{

    float size2 = `Size` / cos(PI/float(`Branches`));

    float an = PI/float(`Branches`);

    float t = `Pointiness`;
    t = mix(2.0, float(`Branches`), t );

    float r = mix(0.0, size2, `Roundness`);


    float size = (size2-r);

    float en = PI/t;



    vec2 acs = vec2 (cos(an), sin(an));
    vec2 ecs = vec2 (cos(en), sin(en));

    // Symmetry
    float bn = mod(atan(uv.x, uv.y), 2.0*an) - an;
    uv = length(uv)*vec2(cos(bn), abs(sin(bn)));

    uv-= size*acs;

    uv += ecs*clamp(-dot(uv,ecs), 0.0, size*acs.y/ecs.y);

    return length(uv)*sign(uv.x) -r;


}


