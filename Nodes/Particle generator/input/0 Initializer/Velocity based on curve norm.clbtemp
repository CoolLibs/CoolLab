// To learn how to write nodes, see https://coollab-art.com/Tutorials/Writing%20Nodes/Intro

INPUT float->$UV 'Curve';
$$if(IS_2D);
INPUT bool 'Invert';
$$else;
INPUT Angle 'Orientation';
$$endif;

$vec main($Particle particle)
{
    uint particle_count = DispatchSize.x;

    float t = float(particle.id) / float(particle_count - 1);

    return getCurveNormal(particle.position, t);
}

$vec getCurveNormal($vec position, float percent)
{
    float epsilon = 0.00001;

    // Calculate the gradient using the central difference method
    $vec derrivate = 'Curve'(percent + epsilon) - 'Curve'(percent - epsilon);

    // Normalize the gradient to get the direction
    $vec gradient = normalize(derrivate);

    // The normal to the curve is the perpendicular vector to the gradient
    $$if(IS_2D);

    vec2 normal = vec2(-gradient.y, gradient.x);
    if ('Invert')
        normal *= -1;

    $$else;

    vec3 normal_x = normalize(cross(normalize(-position), gradient));
    vec3 normal_y = cross(normal_x, gradient);
    vec3 normal   = cos('Orientation') * normal_x + sin('Orientation') * normal_y;

    $$endif;

    return normal;
}