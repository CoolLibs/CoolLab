
INPUT             UV->sRGB `Image`;
INPUT             Point2D `Center`;
INPUT int `Sample Count`;
INPUT float `Blur`;
INPUT float `Falloff`;

sRGB main(UV uv)
{
    // vec3 in_color = `Image`(uv);
    uv -= `Center`;

    float inverseSampleCount = 1.0 / `Sample Count`;

    vec2 direction = normalize(uv);

    vec2 velocity = direction * `Blur` * pow(length(uv), `Falloff`);

    mat3x2 increments = mat3x2(
        velocity * 1.0 * inverseSampleCount,
        velocity * 2.0 * inverseSampleCount,
        velocity * 4.0 * inverseSampleCount
    );

    vec3   accumulator = vec3(0);
    mat3x2 offsets     = mat3x2(0);

    for (int i = 0; i < `Sample Count`; i++)
    {
        accumulator.g += `Image`(uv + offsets[1]).g;
        accumulator.b += `Image`(uv + offsets[2]).b;
        accumulator.r += `Image`(uv + offsets[0]).r;

        offsets -= increments;
    }

    return accumulator * inverseSampleCount;
}