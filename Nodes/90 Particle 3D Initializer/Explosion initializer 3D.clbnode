/* -----------------------------------------------------------------------------
 * This file was automatically generated by a Python script.
 * PLEASE DON'T EDIT IT DIRECTLY, your changes would be overwritten the next time the script is run.
 * Instead, go to "input/Explosion initializer.clbtemp" and see https://coollab-art.com/Tutorials/Writing%20Nodes/Particle%20nodes.
 * -----------------------------------------------------------------------------
 */

// To learn how to write nodes, see https://coollab-art.com/Tutorials/Writing%20Nodes/Intro

INPUT float 'Lifetime';
INPUT float 'Starting size';
INPUT float 'Radius';
INPUT float 'Strength';

Particle3D main()
{
    coollab_context.particle.lifetime -= _delta_time;
    if (coollab_context.particle.lifetime <= 0.0)
    {
        coollab_context.particle.lifetime     = 'Lifetime' * hash_0_to_1_3D_to_1D(vec3(coollab_context.particle.id, coollab_context.particle.position.xy));
        coollab_context.particle.lifetime_max = coollab_context.particle.lifetime;
        vec3  random                          = hash_0_to_1_3D_to_3D(vec3(coollab_context.particle.position.x, _delta_time, coollab_context.particle.id)).xyz;
        float r                               = sqrt(random.z);
        float theta                           = 2 * PI * random.x;

        ;
        float omega     = 2 * PI * random.y;
        vec3  direction = (cos(theta) * cos(omega) * vec3(1, 0, 0) + sin(theta) * cos(omega) * vec3(0, 1, 0) + sin(omega) * vec3(0, 0, 1));
        ;

        coollab_context.particle.position = r * 'Radius' * direction;
        coollab_context.particle.velocity = 'Strength' * direction;
        coollab_context.particle.size     = 'Starting size';
    }

    return coollab_context.particle;
}
