// To learn how to write nodes, see https://coollab-art.com/Tutorials/Writing%20Nodes/Intro

INPUT vec3->SignedDistance `Shape 3D`;

float RayMarch(vec3 ro, vec3 rd)
{
    float dO = 0.;

    for (int i = 0; i < 100; i++)
    {
        vec3  p  = ro + rd * dO;
        float dS = `Shape 3D`(p);
        dO += dS;
        if (dO > 100. || abs(dS) < .001)
            break;
    }

    return dO;
}

vec3 GetNormal(vec3 p)
{
    vec2 e = vec2(.001, 0);
    vec3 n = `Shape 3D`(p)-vec3(`Shape 3D`(p - e.xyy), `Shape 3D`(p - e.yxy), `Shape 3D`(p - e.yyx));

    return normalize(n);
}

LinearRGB_StraightA main(UV uv)
{
    vec3 ro = cool_ray_origin(_uv);    // TODO(JF) We should pass uv instead of _uv
    vec3 rd = cool_ray_direction(_uv); // TODO(JF) We should pass uv instead of _uv

    float d = RayMarch(ro, rd);

    vec3 col = vec3(0.);
    if (d < 100.)
    {
        vec3 p = ro + rd * d;
        col    = GetNormal(p) * 0.5 + 0.5;
    }

    return vec4(col, 1.);
}