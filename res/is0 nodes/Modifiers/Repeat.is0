[SDF] (vec3 p) {
    const int x_repetition_number = X_Repetitions - 1;
    const int y_repetition_number = Y_Repetitions - 1;
    const int z_repetition_number = Z_Repetitions - 1;
    const vec3 right = vec3(x_repetition_number / 2,
                            y_repetition_number / 2,
                            z_repetition_number / 2);
    const vec3 left = -right - vec3(x_repetition_number % 2 == 0 ? 0. : 1., 
                                    y_repetition_number % 2 == 0 ? 0. : 1.,
                                    z_repetition_number % 2 == 0 ? 0. : 1.);
    const vec3 cell_radii = vec3(X_Spacing, Y_Spacing, Z_Spacing);
    vec3 q = p - cell_radii * clamp(round(p / cell_radii), left, right);
    return ${SDF}(q);
}

int {
    "Name": "X Repetitions",
    "Default": 2,
    "Min": 1,
    "Max": 5
}

int {
    "Name": "Y Repetitions",
    "Default": 2,
    "Min": 1,
    "Max": 5
}

int {
    "Name": "Z Repetitions",
    "Default": 2,
    "Min": 1,
    "Max": 5
}

float {
    "Name": "X Spacing",
    "Default": 10.0,
    "Min": 0.0,
    "Max": 30.0
}

float {
    "Name": "Y Spacing",
    "Default": 10.0,
    "Min": 0.0,
    "Max": 30.0
}

float {
    "Name": "Z Spacing",
    "Default": 10.0,
    "Min": 0.0,
    "Max": 30.0
}