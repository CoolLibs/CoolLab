`
float _prism_Half_Space_SDF(vec3 pos, vec3 normal, vec3 origin)
{
    return dot(pos - origin, normal);
}
`

[] (vec3 pos) {
    float d = max(
        -pos.z - Height/2,
         pos.z - Height/2
    ); 
    for (int i = 0; i < Faces_Count; ++i) {
        const float c = cos(i * TAU / Faces_Count);
        const float s = sin(i * TAU / Faces_Count);
        const vec3 polygon_vertex = vec3(c, s, 0.);
        d = smooth_max_polynomial(d,
                _prism_Half_Space_SDF(pos, polygon_vertex, Base_Radius * polygon_vertex),
                Smoothing
        );
    }
    return d;
}

int {
    "Name": "Faces Count",
    "Default": 5,
    "Min": 3,
    "Max": 20
}

float {
    "Name": "Base Radius",
    "Default": 1.0,
    "Min": 0.0,
    "Max": 5.0
}

float {
    "Name": "Height",
    "Default": 2.5,
    "Min": 0.0,
    "Max": 10.0
}

float {
    "Name": "Smoothing",
    "Default": 0.0,
    "Min": 0.0,
    "Max": 0.5
}

