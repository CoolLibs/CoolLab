[SDF NoiseSDF] (vec3 p) {
    float distance = ${SDF}(p);
    float scale = 1.;
    for (int i = 0; i < Iterations; i++){
        float new_octave = scale * ${NoiseSDF}(p);

        new_octave = smooth_max_polynomial(new_octave, distance - Thickness * scale, Smoothing * scale);
        if (Carve) {
            distance = smooth_max_polynomial(-new_octave, distance, Smoothing * scale);
        }
        else {
            distance = smooth_min_polynomial(new_octave, distance, Smoothing * scale);
        }

        p = mat3( 0.00, 1.60, 1.20, 
                 -1.60, 0.72, -0.96, 
                 -1.20, -0.96, 1.28) * p;
        scale *= 0.5;
    }
    return IS0_FIX_ARTIFACTS(distance);
}

int {
    "Name": "Iterations",
    "Default": 4,
    "Min": 1,
    "Max": 7
}

float {
    "Name": "Smoothing",
    "Default": 0.5,
    "Min": 0.0,
    "Max": 2.0
}

float {
    "Name": "Thickness",
    "Default": 0.5,
    "Min": 0.0,
    "Max": 2.0
}

bool {
    "Name": "Carve",
    "Default": false
}