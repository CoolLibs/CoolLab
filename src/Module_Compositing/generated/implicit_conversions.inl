/* -----------------------------------------------------------------------------
 * This file was automatically generated by a Python script.
 * PLEASE DON'T EDIT IT DIRECTLY, your changes would be overwritten the next time the script is run.
 * Instead, go to "gen_primitive_types.py" and edit the "implicit_conversions" function there.
 * -----------------------------------------------------------------------------
 */

if (from == PrimitiveType::Float && to == PrimitiveType::Angle)
{
    ;
    return context.push_function(gen_Coollab_Angle_from_Float());
}

if (from == PrimitiveType::Angle && to == PrimitiveType::Float)
{
    ;
    return context.push_function(gen_Coollab_Float_from_Angle());
}

if (from == PrimitiveType::Float && to == PrimitiveType::Hue)
{
    ;
    return context.push_function(gen_Coollab_Hue_from_Float());
}

if (from == PrimitiveType::Hue && to == PrimitiveType::Float)
{
    ;
    return context.push_function(gen_Coollab_Float_from_Hue());
}

if (from == PrimitiveType::Float && to == PrimitiveType::Int)
{
    ;
    return context.push_function(gen_Coollab_Int_from_Float());
}

if (from == PrimitiveType::Int && to == PrimitiveType::Float)
{
    ;
    return context.push_function(gen_Coollab_Float_from_Int());
}

if (from == PrimitiveType::Float && to == PrimitiveType::Bool)
{
    ;
    return context.push_function(gen_Coollab_Bool_from_Float());
}

if (from == PrimitiveType::Bool && to == PrimitiveType::Float)
{
    ;
    return context.push_function(gen_Coollab_Float_from_Bool());
}

if (from == PrimitiveType::Angle && to == PrimitiveType::Direction2D)
{
    ;
    return context.push_function(gen_Coollab_Direction2D_from_Angle());
}

if (from == PrimitiveType::Float && to == PrimitiveType::Direction2D)
{
    ;
    return context.push_function(gen_Coollab_Direction2D_from_Float());
}

if (from == PrimitiveType::Direction2D && to == PrimitiveType::Angle)
{
    ;
    return context.push_function(gen_Coollab_Angle_from_Direction2D());
}

if (from == PrimitiveType::UV && to == PrimitiveType::Vec2)
{
    ;
    return context.push_function(gen_Coollab_Vec2_from_UV());
}

if (from == PrimitiveType::Vec2 && to == PrimitiveType::UV)
{
    ;
    return context.push_function(gen_Coollab_UV_from_Vec2());
}

if (from == PrimitiveType::Void && to == PrimitiveType::UV)
{
    ;
    return context.push_function(gen_Coollab_UV_from_Void());
}

if (from == PrimitiveType::Float_StraightA && to == PrimitiveType::Angle)
{
    context.push_function(gen_Coollab_Angle_from_Float());
    context.push_function(gen_Coollab_Float_from_Float_StraightA());
    return context.push_function(gen_Coollab_Angle_from_Float_StraightA());
}

if (from == PrimitiveType::Float_PremultipliedA && to == PrimitiveType::Angle)
{
    context.push_function(gen_Coollab_Angle_from_Float());
    context.push_function(gen_Coollab_Float_from_Float_PremultipliedA());
    return context.push_function(gen_Coollab_Angle_from_Float_PremultipliedA());
}

if (from == PrimitiveType::Angle && to == PrimitiveType::Float_StraightA)
{
    context.push_function(gen_Coollab_Float_StraightA_from_Float());
    context.push_function(gen_Coollab_Float_from_Angle());
    return context.push_function(gen_Coollab_Float_StraightA_from_Angle());
}

if (from == PrimitiveType::Angle && to == PrimitiveType::Float_PremultipliedA)
{
    context.push_function(gen_Coollab_Float_PremultipliedA_from_Float());
    context.push_function(gen_Coollab_Float_from_Angle());
    return context.push_function(gen_Coollab_Float_PremultipliedA_from_Angle());
}

if (from == PrimitiveType::Float_StraightA && to == PrimitiveType::Hue)
{
    context.push_function(gen_Coollab_Hue_from_Float());
    context.push_function(gen_Coollab_Float_from_Float_StraightA());
    return context.push_function(gen_Coollab_Hue_from_Float_StraightA());
}

if (from == PrimitiveType::Float_PremultipliedA && to == PrimitiveType::Hue)
{
    context.push_function(gen_Coollab_Hue_from_Float());
    context.push_function(gen_Coollab_Float_from_Float_PremultipliedA());
    return context.push_function(gen_Coollab_Hue_from_Float_PremultipliedA());
}

if (from == PrimitiveType::Hue && to == PrimitiveType::Float_StraightA)
{
    context.push_function(gen_Coollab_Float_StraightA_from_Float());
    context.push_function(gen_Coollab_Float_from_Hue());
    return context.push_function(gen_Coollab_Float_StraightA_from_Hue());
}

if (from == PrimitiveType::Hue && to == PrimitiveType::Float_PremultipliedA)
{
    context.push_function(gen_Coollab_Float_PremultipliedA_from_Float());
    context.push_function(gen_Coollab_Float_from_Hue());
    return context.push_function(gen_Coollab_Float_PremultipliedA_from_Hue());
}

if (from == PrimitiveType::Float_StraightA && to == PrimitiveType::Int)
{
    context.push_function(gen_Coollab_Int_from_Float());
    context.push_function(gen_Coollab_Float_from_Float_StraightA());
    return context.push_function(gen_Coollab_Int_from_Float_StraightA());
}

if (from == PrimitiveType::Float_PremultipliedA && to == PrimitiveType::Int)
{
    context.push_function(gen_Coollab_Int_from_Float());
    context.push_function(gen_Coollab_Float_from_Float_PremultipliedA());
    return context.push_function(gen_Coollab_Int_from_Float_PremultipliedA());
}

if (from == PrimitiveType::Int && to == PrimitiveType::Float_StraightA)
{
    context.push_function(gen_Coollab_Float_StraightA_from_Float());
    context.push_function(gen_Coollab_Float_from_Int());
    return context.push_function(gen_Coollab_Float_StraightA_from_Int());
}

if (from == PrimitiveType::Int && to == PrimitiveType::Float_PremultipliedA)
{
    context.push_function(gen_Coollab_Float_PremultipliedA_from_Float());
    context.push_function(gen_Coollab_Float_from_Int());
    return context.push_function(gen_Coollab_Float_PremultipliedA_from_Int());
}

if (from == PrimitiveType::Float_StraightA && to == PrimitiveType::Bool)
{
    context.push_function(gen_Coollab_Bool_from_Float());
    context.push_function(gen_Coollab_Float_from_Float_StraightA());
    return context.push_function(gen_Coollab_Bool_from_Float_StraightA());
}

if (from == PrimitiveType::Float_PremultipliedA && to == PrimitiveType::Bool)
{
    context.push_function(gen_Coollab_Bool_from_Float());
    context.push_function(gen_Coollab_Float_from_Float_PremultipliedA());
    return context.push_function(gen_Coollab_Bool_from_Float_PremultipliedA());
}

if (from == PrimitiveType::Bool && to == PrimitiveType::Float_StraightA)
{
    context.push_function(gen_Coollab_Float_StraightA_from_Float());
    context.push_function(gen_Coollab_Float_from_Bool());
    return context.push_function(gen_Coollab_Float_StraightA_from_Bool());
}

if (from == PrimitiveType::Bool && to == PrimitiveType::Float_PremultipliedA)
{
    context.push_function(gen_Coollab_Float_PremultipliedA_from_Float());
    context.push_function(gen_Coollab_Float_from_Bool());
    return context.push_function(gen_Coollab_Float_PremultipliedA_from_Bool());
}

if (from == PrimitiveType::Float_StraightA && to == PrimitiveType::Direction2D)
{
    context.push_function(gen_Coollab_Direction2D_from_Float());
    context.push_function(gen_Coollab_Float_from_Float_StraightA());
    return context.push_function(gen_Coollab_Direction2D_from_Float_StraightA());
}

if (from == PrimitiveType::Float_PremultipliedA && to == PrimitiveType::Direction2D)
{
    context.push_function(gen_Coollab_Direction2D_from_Float());
    context.push_function(gen_Coollab_Float_from_Float_PremultipliedA());
    return context.push_function(gen_Coollab_Direction2D_from_Float_PremultipliedA());
}
