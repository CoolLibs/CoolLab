/* -----------------------------------------------------------------------------
 * This file was automatically generated by a Python script.
 * PLEASE DON'T EDIT IT DIRECTLY, your changes would be overwritten the next time the script is run.
 * Instead, go to "generator.py" and edit the "implicit_color_conversions" function there.
 * -----------------------------------------------------------------------------
 */

if (from == PrimitiveType::CIELAB && to == PrimitiveType::CIELAB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_StraightA_from_CIELAB",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_StraightA_from_CIELAB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = (from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB && to == PrimitiveType::CIELAB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_PremultipliedA_from_CIELAB",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_PremultipliedA_from_CIELAB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = (from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_StraightA && to == PrimitiveType::CIELAB)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_from_CIELAB_StraightA",
        .definition = R"STR(
                            vec3 Coollab_CIELAB_from_CIELAB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_StraightA && to == PrimitiveType::CIELAB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_PremultipliedA_from_CIELAB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_PremultipliedA_from_CIELAB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_PremultipliedA && to == PrimitiveType::CIELAB)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_from_CIELAB_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_CIELAB_from_CIELAB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_PremultipliedA && to == PrimitiveType::CIELAB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_StraightA_from_CIELAB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_StraightA_from_CIELAB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB && to == PrimitiveType::LinearRGB)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_from_CIELAB",
        .definition = R"STR(
                            vec3 Coollab_LinearRGB_from_CIELAB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_CIELAB(from);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB && to == PrimitiveType::LinearRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_StraightA_from_CIELAB",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_StraightA_from_CIELAB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_CIELAB(from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB && to == PrimitiveType::LinearRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_PremultipliedA_from_CIELAB",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_PremultipliedA_from_CIELAB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_CIELAB(from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_StraightA && to == PrimitiveType::LinearRGB)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_from_CIELAB_StraightA",
        .definition = R"STR(
                            vec3 Coollab_LinearRGB_from_CIELAB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_CIELAB(from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_StraightA && to == PrimitiveType::LinearRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_StraightA_from_CIELAB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_StraightA_from_CIELAB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_CIELAB(from.xyz);
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_StraightA && to == PrimitiveType::LinearRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_PremultipliedA_from_CIELAB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_PremultipliedA_from_CIELAB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_CIELAB(from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_PremultipliedA && to == PrimitiveType::LinearRGB)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_from_CIELAB_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_LinearRGB_from_CIELAB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_CIELAB(from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_PremultipliedA && to == PrimitiveType::LinearRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_StraightA_from_CIELAB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_StraightA_from_CIELAB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_CIELAB(from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_PremultipliedA && to == PrimitiveType::LinearRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_PremultipliedA_from_CIELAB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_PremultipliedA_from_CIELAB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        // We need to unpremultiply for the color conversion, and re-premultiply afterwards
                        vec3 to = Cool_LinearRGB_from_CIELAB(from.xyz / saturate(from.a));
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB && to == PrimitiveType::sRGB)
{
    return context.push_function({
        .name       = "Coollab_sRGB_from_CIELAB",
        .definition = R"STR(
                            vec3 Coollab_sRGB_from_CIELAB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_CIELAB(from);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB && to == PrimitiveType::sRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_StraightA_from_CIELAB",
        .definition = R"STR(
                            vec4 Coollab_sRGB_StraightA_from_CIELAB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_CIELAB(from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB && to == PrimitiveType::sRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_PremultipliedA_from_CIELAB",
        .definition = R"STR(
                            vec4 Coollab_sRGB_PremultipliedA_from_CIELAB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_CIELAB(from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_StraightA && to == PrimitiveType::sRGB)
{
    return context.push_function({
        .name       = "Coollab_sRGB_from_CIELAB_StraightA",
        .definition = R"STR(
                            vec3 Coollab_sRGB_from_CIELAB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_CIELAB(from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_StraightA && to == PrimitiveType::sRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_StraightA_from_CIELAB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_StraightA_from_CIELAB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_CIELAB(from.xyz);
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_StraightA && to == PrimitiveType::sRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_PremultipliedA_from_CIELAB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_PremultipliedA_from_CIELAB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_CIELAB(from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_PremultipliedA && to == PrimitiveType::sRGB)
{
    return context.push_function({
        .name       = "Coollab_sRGB_from_CIELAB_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_sRGB_from_CIELAB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_CIELAB(from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_PremultipliedA && to == PrimitiveType::sRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_StraightA_from_CIELAB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_StraightA_from_CIELAB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_CIELAB(from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_PremultipliedA && to == PrimitiveType::sRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_PremultipliedA_from_CIELAB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_PremultipliedA_from_CIELAB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        // We need to unpremultiply for the color conversion, and re-premultiply afterwards
                        vec3 to = Cool_sRGB_from_CIELAB(from.xyz / saturate(from.a));
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB && to == PrimitiveType::HSLuv)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_from_CIELAB",
        .definition = R"STR(
                            vec3 Coollab_HSLuv_from_CIELAB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_CIELAB(from);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB && to == PrimitiveType::HSLuv_StraightA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_StraightA_from_CIELAB",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_StraightA_from_CIELAB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_CIELAB(from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB && to == PrimitiveType::HSLuv_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_PremultipliedA_from_CIELAB",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_PremultipliedA_from_CIELAB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_CIELAB(from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_StraightA && to == PrimitiveType::HSLuv)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_from_CIELAB_StraightA",
        .definition = R"STR(
                            vec3 Coollab_HSLuv_from_CIELAB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_CIELAB(from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_StraightA && to == PrimitiveType::HSLuv_StraightA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_StraightA_from_CIELAB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_StraightA_from_CIELAB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_CIELAB(from.xyz);
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_StraightA && to == PrimitiveType::HSLuv_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_PremultipliedA_from_CIELAB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_PremultipliedA_from_CIELAB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_CIELAB(from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_PremultipliedA && to == PrimitiveType::HSLuv)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_from_CIELAB_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_HSLuv_from_CIELAB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_CIELAB(from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_PremultipliedA && to == PrimitiveType::HSLuv_StraightA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_StraightA_from_CIELAB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_StraightA_from_CIELAB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_CIELAB(from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::CIELAB_PremultipliedA && to == PrimitiveType::HSLuv_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_PremultipliedA_from_CIELAB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_PremultipliedA_from_CIELAB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        // We need to unpremultiply for the color conversion, and re-premultiply afterwards
                        vec3 to = Cool_HSLuv_from_CIELAB(from.xyz / saturate(from.a));
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB && to == PrimitiveType::CIELAB)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_from_LinearRGB",
        .definition = R"STR(
                            vec3 Coollab_CIELAB_from_LinearRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_LinearRGB(from);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB && to == PrimitiveType::CIELAB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_StraightA_from_LinearRGB",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_StraightA_from_LinearRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_LinearRGB(from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB && to == PrimitiveType::CIELAB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_PremultipliedA_from_LinearRGB",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_PremultipliedA_from_LinearRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_LinearRGB(from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_StraightA && to == PrimitiveType::CIELAB)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_from_LinearRGB_StraightA",
        .definition = R"STR(
                            vec3 Coollab_CIELAB_from_LinearRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_LinearRGB(from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_StraightA && to == PrimitiveType::CIELAB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_StraightA_from_LinearRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_StraightA_from_LinearRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_LinearRGB(from.xyz);
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_StraightA && to == PrimitiveType::CIELAB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_PremultipliedA_from_LinearRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_PremultipliedA_from_LinearRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_LinearRGB(from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_PremultipliedA && to == PrimitiveType::CIELAB)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_from_LinearRGB_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_CIELAB_from_LinearRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_LinearRGB(from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_PremultipliedA && to == PrimitiveType::CIELAB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_StraightA_from_LinearRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_StraightA_from_LinearRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_LinearRGB(from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_PremultipliedA && to == PrimitiveType::CIELAB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_PremultipliedA_from_LinearRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_PremultipliedA_from_LinearRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        // We need to unpremultiply for the color conversion, and re-premultiply afterwards
                        vec3 to = Cool_CIELAB_from_LinearRGB(from.xyz / saturate(from.a));
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB && to == PrimitiveType::LinearRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_StraightA_from_LinearRGB",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_StraightA_from_LinearRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = (from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB && to == PrimitiveType::LinearRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_PremultipliedA_from_LinearRGB",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_PremultipliedA_from_LinearRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = (from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_StraightA && to == PrimitiveType::LinearRGB)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_from_LinearRGB_StraightA",
        .definition = R"STR(
                            vec3 Coollab_LinearRGB_from_LinearRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_StraightA && to == PrimitiveType::LinearRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_PremultipliedA_from_LinearRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_PremultipliedA_from_LinearRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_PremultipliedA && to == PrimitiveType::LinearRGB)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_from_LinearRGB_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_LinearRGB_from_LinearRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_PremultipliedA && to == PrimitiveType::LinearRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_StraightA_from_LinearRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_StraightA_from_LinearRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB && to == PrimitiveType::sRGB)
{
    return context.push_function({
        .name       = "Coollab_sRGB_from_LinearRGB",
        .definition = R"STR(
                            vec3 Coollab_sRGB_from_LinearRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_LinearRGB(from);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB && to == PrimitiveType::sRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_StraightA_from_LinearRGB",
        .definition = R"STR(
                            vec4 Coollab_sRGB_StraightA_from_LinearRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_LinearRGB(from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB && to == PrimitiveType::sRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_PremultipliedA_from_LinearRGB",
        .definition = R"STR(
                            vec4 Coollab_sRGB_PremultipliedA_from_LinearRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_LinearRGB(from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_StraightA && to == PrimitiveType::sRGB)
{
    return context.push_function({
        .name       = "Coollab_sRGB_from_LinearRGB_StraightA",
        .definition = R"STR(
                            vec3 Coollab_sRGB_from_LinearRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_LinearRGB(from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_StraightA && to == PrimitiveType::sRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_StraightA_from_LinearRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_StraightA_from_LinearRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_LinearRGB(from.xyz);
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_StraightA && to == PrimitiveType::sRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_PremultipliedA_from_LinearRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_PremultipliedA_from_LinearRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_LinearRGB(from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_PremultipliedA && to == PrimitiveType::sRGB)
{
    return context.push_function({
        .name       = "Coollab_sRGB_from_LinearRGB_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_sRGB_from_LinearRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_LinearRGB(from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_PremultipliedA && to == PrimitiveType::sRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_StraightA_from_LinearRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_StraightA_from_LinearRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_LinearRGB(from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_PremultipliedA && to == PrimitiveType::sRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_PremultipliedA_from_LinearRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_PremultipliedA_from_LinearRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        // We need to unpremultiply for the color conversion, and re-premultiply afterwards
                        vec3 to = Cool_sRGB_from_LinearRGB(from.xyz / saturate(from.a));
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB && to == PrimitiveType::HSLuv)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_from_LinearRGB",
        .definition = R"STR(
                            vec3 Coollab_HSLuv_from_LinearRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_LinearRGB(from);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB && to == PrimitiveType::HSLuv_StraightA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_StraightA_from_LinearRGB",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_StraightA_from_LinearRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_LinearRGB(from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB && to == PrimitiveType::HSLuv_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_PremultipliedA_from_LinearRGB",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_PremultipliedA_from_LinearRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_LinearRGB(from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_StraightA && to == PrimitiveType::HSLuv)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_from_LinearRGB_StraightA",
        .definition = R"STR(
                            vec3 Coollab_HSLuv_from_LinearRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_LinearRGB(from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_StraightA && to == PrimitiveType::HSLuv_StraightA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_StraightA_from_LinearRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_StraightA_from_LinearRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_LinearRGB(from.xyz);
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_StraightA && to == PrimitiveType::HSLuv_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_PremultipliedA_from_LinearRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_PremultipliedA_from_LinearRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_LinearRGB(from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_PremultipliedA && to == PrimitiveType::HSLuv)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_from_LinearRGB_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_HSLuv_from_LinearRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_LinearRGB(from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_PremultipliedA && to == PrimitiveType::HSLuv_StraightA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_StraightA_from_LinearRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_StraightA_from_LinearRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_LinearRGB(from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::LinearRGB_PremultipliedA && to == PrimitiveType::HSLuv_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_PremultipliedA_from_LinearRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_PremultipliedA_from_LinearRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        // We need to unpremultiply for the color conversion, and re-premultiply afterwards
                        vec3 to = Cool_HSLuv_from_LinearRGB(from.xyz / saturate(from.a));
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB && to == PrimitiveType::CIELAB)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_from_sRGB",
        .definition = R"STR(
                            vec3 Coollab_CIELAB_from_sRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_sRGB(from);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB && to == PrimitiveType::CIELAB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_StraightA_from_sRGB",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_StraightA_from_sRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_sRGB(from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB && to == PrimitiveType::CIELAB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_PremultipliedA_from_sRGB",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_PremultipliedA_from_sRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_sRGB(from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_StraightA && to == PrimitiveType::CIELAB)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_from_sRGB_StraightA",
        .definition = R"STR(
                            vec3 Coollab_CIELAB_from_sRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_sRGB(from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_StraightA && to == PrimitiveType::CIELAB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_StraightA_from_sRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_StraightA_from_sRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_sRGB(from.xyz);
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_StraightA && to == PrimitiveType::CIELAB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_PremultipliedA_from_sRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_PremultipliedA_from_sRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_sRGB(from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_PremultipliedA && to == PrimitiveType::CIELAB)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_from_sRGB_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_CIELAB_from_sRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_sRGB(from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_PremultipliedA && to == PrimitiveType::CIELAB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_StraightA_from_sRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_StraightA_from_sRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_sRGB(from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_PremultipliedA && to == PrimitiveType::CIELAB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_PremultipliedA_from_sRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_PremultipliedA_from_sRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        // We need to unpremultiply for the color conversion, and re-premultiply afterwards
                        vec3 to = Cool_CIELAB_from_sRGB(from.xyz / saturate(from.a));
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB && to == PrimitiveType::LinearRGB)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_from_sRGB",
        .definition = R"STR(
                            vec3 Coollab_LinearRGB_from_sRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_sRGB(from);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB && to == PrimitiveType::LinearRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_StraightA_from_sRGB",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_StraightA_from_sRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_sRGB(from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB && to == PrimitiveType::LinearRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_PremultipliedA_from_sRGB",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_PremultipliedA_from_sRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_sRGB(from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_StraightA && to == PrimitiveType::LinearRGB)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_from_sRGB_StraightA",
        .definition = R"STR(
                            vec3 Coollab_LinearRGB_from_sRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_sRGB(from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_StraightA && to == PrimitiveType::LinearRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_StraightA_from_sRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_StraightA_from_sRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_sRGB(from.xyz);
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_StraightA && to == PrimitiveType::LinearRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_PremultipliedA_from_sRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_PremultipliedA_from_sRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_sRGB(from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_PremultipliedA && to == PrimitiveType::LinearRGB)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_from_sRGB_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_LinearRGB_from_sRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_sRGB(from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_PremultipliedA && to == PrimitiveType::LinearRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_StraightA_from_sRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_StraightA_from_sRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_sRGB(from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_PremultipliedA && to == PrimitiveType::LinearRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_PremultipliedA_from_sRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_PremultipliedA_from_sRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        // We need to unpremultiply for the color conversion, and re-premultiply afterwards
                        vec3 to = Cool_LinearRGB_from_sRGB(from.xyz / saturate(from.a));
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB && to == PrimitiveType::sRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_StraightA_from_sRGB",
        .definition = R"STR(
                            vec4 Coollab_sRGB_StraightA_from_sRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = (from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB && to == PrimitiveType::sRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_PremultipliedA_from_sRGB",
        .definition = R"STR(
                            vec4 Coollab_sRGB_PremultipliedA_from_sRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = (from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_StraightA && to == PrimitiveType::sRGB)
{
    return context.push_function({
        .name       = "Coollab_sRGB_from_sRGB_StraightA",
        .definition = R"STR(
                            vec3 Coollab_sRGB_from_sRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_StraightA && to == PrimitiveType::sRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_PremultipliedA_from_sRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_PremultipliedA_from_sRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_PremultipliedA && to == PrimitiveType::sRGB)
{
    return context.push_function({
        .name       = "Coollab_sRGB_from_sRGB_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_sRGB_from_sRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_PremultipliedA && to == PrimitiveType::sRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_StraightA_from_sRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_StraightA_from_sRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB && to == PrimitiveType::HSLuv)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_from_sRGB",
        .definition = R"STR(
                            vec3 Coollab_HSLuv_from_sRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_sRGB(from);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB && to == PrimitiveType::HSLuv_StraightA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_StraightA_from_sRGB",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_StraightA_from_sRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_sRGB(from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB && to == PrimitiveType::HSLuv_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_PremultipliedA_from_sRGB",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_PremultipliedA_from_sRGB/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_sRGB(from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_StraightA && to == PrimitiveType::HSLuv)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_from_sRGB_StraightA",
        .definition = R"STR(
                            vec3 Coollab_HSLuv_from_sRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_sRGB(from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_StraightA && to == PrimitiveType::HSLuv_StraightA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_StraightA_from_sRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_StraightA_from_sRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_sRGB(from.xyz);
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_StraightA && to == PrimitiveType::HSLuv_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_PremultipliedA_from_sRGB_StraightA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_PremultipliedA_from_sRGB_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_sRGB(from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_PremultipliedA && to == PrimitiveType::HSLuv)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_from_sRGB_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_HSLuv_from_sRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_sRGB(from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_PremultipliedA && to == PrimitiveType::HSLuv_StraightA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_StraightA_from_sRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_StraightA_from_sRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_HSLuv_from_sRGB(from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::sRGB_PremultipliedA && to == PrimitiveType::HSLuv_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_PremultipliedA_from_sRGB_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_PremultipliedA_from_sRGB_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        // We need to unpremultiply for the color conversion, and re-premultiply afterwards
                        vec3 to = Cool_HSLuv_from_sRGB(from.xyz / saturate(from.a));
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv && to == PrimitiveType::CIELAB)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_from_HSLuv",
        .definition = R"STR(
                            vec3 Coollab_CIELAB_from_HSLuv/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_HSLuv(from);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv && to == PrimitiveType::CIELAB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_StraightA_from_HSLuv",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_StraightA_from_HSLuv/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_HSLuv(from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv && to == PrimitiveType::CIELAB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_PremultipliedA_from_HSLuv",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_PremultipliedA_from_HSLuv/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_HSLuv(from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_StraightA && to == PrimitiveType::CIELAB)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_from_HSLuv_StraightA",
        .definition = R"STR(
                            vec3 Coollab_CIELAB_from_HSLuv_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_HSLuv(from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_StraightA && to == PrimitiveType::CIELAB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_StraightA_from_HSLuv_StraightA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_StraightA_from_HSLuv_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_HSLuv(from.xyz);
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_StraightA && to == PrimitiveType::CIELAB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_PremultipliedA_from_HSLuv_StraightA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_PremultipliedA_from_HSLuv_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_HSLuv(from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_PremultipliedA && to == PrimitiveType::CIELAB)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_from_HSLuv_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_CIELAB_from_HSLuv_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_HSLuv(from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_PremultipliedA && to == PrimitiveType::CIELAB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_StraightA_from_HSLuv_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_StraightA_from_HSLuv_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_CIELAB_from_HSLuv(from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_PremultipliedA && to == PrimitiveType::CIELAB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_CIELAB_PremultipliedA_from_HSLuv_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_CIELAB_PremultipliedA_from_HSLuv_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        // We need to unpremultiply for the color conversion, and re-premultiply afterwards
                        vec3 to = Cool_CIELAB_from_HSLuv(from.xyz / saturate(from.a));
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv && to == PrimitiveType::LinearRGB)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_from_HSLuv",
        .definition = R"STR(
                            vec3 Coollab_LinearRGB_from_HSLuv/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_HSLuv(from);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv && to == PrimitiveType::LinearRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_StraightA_from_HSLuv",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_StraightA_from_HSLuv/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_HSLuv(from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv && to == PrimitiveType::LinearRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_PremultipliedA_from_HSLuv",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_PremultipliedA_from_HSLuv/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_HSLuv(from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_StraightA && to == PrimitiveType::LinearRGB)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_from_HSLuv_StraightA",
        .definition = R"STR(
                            vec3 Coollab_LinearRGB_from_HSLuv_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_HSLuv(from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_StraightA && to == PrimitiveType::LinearRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_StraightA_from_HSLuv_StraightA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_StraightA_from_HSLuv_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_HSLuv(from.xyz);
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_StraightA && to == PrimitiveType::LinearRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_PremultipliedA_from_HSLuv_StraightA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_PremultipliedA_from_HSLuv_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_HSLuv(from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_PremultipliedA && to == PrimitiveType::LinearRGB)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_from_HSLuv_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_LinearRGB_from_HSLuv_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_HSLuv(from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_PremultipliedA && to == PrimitiveType::LinearRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_StraightA_from_HSLuv_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_StraightA_from_HSLuv_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_LinearRGB_from_HSLuv(from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_PremultipliedA && to == PrimitiveType::LinearRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_LinearRGB_PremultipliedA_from_HSLuv_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_LinearRGB_PremultipliedA_from_HSLuv_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        // We need to unpremultiply for the color conversion, and re-premultiply afterwards
                        vec3 to = Cool_LinearRGB_from_HSLuv(from.xyz / saturate(from.a));
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv && to == PrimitiveType::sRGB)
{
    return context.push_function({
        .name       = "Coollab_sRGB_from_HSLuv",
        .definition = R"STR(
                            vec3 Coollab_sRGB_from_HSLuv/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_HSLuv(from);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv && to == PrimitiveType::sRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_StraightA_from_HSLuv",
        .definition = R"STR(
                            vec4 Coollab_sRGB_StraightA_from_HSLuv/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_HSLuv(from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv && to == PrimitiveType::sRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_PremultipliedA_from_HSLuv",
        .definition = R"STR(
                            vec4 Coollab_sRGB_PremultipliedA_from_HSLuv/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_HSLuv(from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_StraightA && to == PrimitiveType::sRGB)
{
    return context.push_function({
        .name       = "Coollab_sRGB_from_HSLuv_StraightA",
        .definition = R"STR(
                            vec3 Coollab_sRGB_from_HSLuv_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_HSLuv(from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_StraightA && to == PrimitiveType::sRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_StraightA_from_HSLuv_StraightA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_StraightA_from_HSLuv_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_HSLuv(from.xyz);
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_StraightA && to == PrimitiveType::sRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_PremultipliedA_from_HSLuv_StraightA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_PremultipliedA_from_HSLuv_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_HSLuv(from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_PremultipliedA && to == PrimitiveType::sRGB)
{
    return context.push_function({
        .name       = "Coollab_sRGB_from_HSLuv_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_sRGB_from_HSLuv_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_HSLuv(from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_PremultipliedA && to == PrimitiveType::sRGB_StraightA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_StraightA_from_HSLuv_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_StraightA_from_HSLuv_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = Cool_sRGB_from_HSLuv(from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_PremultipliedA && to == PrimitiveType::sRGB_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_sRGB_PremultipliedA_from_HSLuv_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_sRGB_PremultipliedA_from_HSLuv_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        // We need to unpremultiply for the color conversion, and re-premultiply afterwards
                        vec3 to = Cool_sRGB_from_HSLuv(from.xyz / saturate(from.a));
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv && to == PrimitiveType::HSLuv_StraightA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_StraightA_from_HSLuv",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_StraightA_from_HSLuv/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = (from);
                        return vec4(to, coollab_global_alpha);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv && to == PrimitiveType::HSLuv_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_PremultipliedA_from_HSLuv",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_PremultipliedA_from_HSLuv/*coollabdef*/(vec3 from)
                            {
                                
                        vec3 to = (from);
                        return vec4(to, 1.) * coollab_global_alpha;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_StraightA && to == PrimitiveType::HSLuv)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_from_HSLuv_StraightA",
        .definition = R"STR(
                            vec3 Coollab_HSLuv_from_HSLuv_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz);
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_StraightA && to == PrimitiveType::HSLuv_PremultipliedA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_PremultipliedA_from_HSLuv_StraightA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_PremultipliedA_from_HSLuv_StraightA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz);
                        return vec4(to * saturate(from.a), from.a);
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_PremultipliedA && to == PrimitiveType::HSLuv)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_from_HSLuv_PremultipliedA",
        .definition = R"STR(
                            vec3 Coollab_HSLuv_from_HSLuv_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz / saturate(from.a));
                        return to;
                    
                            }
                            )STR",
    });
}

if (from == PrimitiveType::HSLuv_PremultipliedA && to == PrimitiveType::HSLuv_StraightA)
{
    return context.push_function({
        .name       = "Coollab_HSLuv_StraightA_from_HSLuv_PremultipliedA",
        .definition = R"STR(
                            vec4 Coollab_HSLuv_StraightA_from_HSLuv_PremultipliedA/*coollabdef*/(vec4 from)
                            {
                                
                        vec3 to = (from.xyz / saturate(from.a));
                        return vec4(to, from.a);
                    
                            }
                            )STR",
    });
}
