/* -----------------------------------------------------------------------------
 * This file was automatically generated by a Python script.
 * PLEASE DON'T EDIT IT DIRECTLY, your changes would be overwritten the next time the script is run.
 * Instead, go to "gen_primitive_types.py" and edit the "cpp_type_as_string_cases" function there.
 * -----------------------------------------------------------------------------
 */
case PrimitiveType::Bool: return "Bool";
case PrimitiveType::Int: return "Int";
case PrimitiveType::Float: return "Float";
case PrimitiveType::Float_PremultipliedA: return "Float_PremultipliedA";
case PrimitiveType::Float_StraightA: return "Float_StraightA";
case PrimitiveType::Vec2: return "Vec2";
case PrimitiveType::Vec3: return "Vec3";
case PrimitiveType::Vec4: return "Vec4";
case PrimitiveType::Mat2: return "Mat2";
case PrimitiveType::Mat3: return "Mat3";
case PrimitiveType::Mat4: return "Mat4";
case PrimitiveType::UV: return "UV";
case PrimitiveType::SignedDistance: return "SignedDistance";
case PrimitiveType::Angle: return "Angle";
case PrimitiveType::Hue: return "Hue";
case PrimitiveType::Direction2D: return "Direction2D";
case PrimitiveType::Void: return "Void";
case PrimitiveType::Any: return "Any";
case PrimitiveType::RayMarchRes: return "RayMarchRes";
case PrimitiveType::CIELAB: return "CIELAB";
case PrimitiveType::CIELAB_PremultipliedA: return "CIELAB_PremultipliedA";
case PrimitiveType::CIELAB_StraightA: return "CIELAB_StraightA";
case PrimitiveType::Oklab: return "Oklab";
case PrimitiveType::Oklab_PremultipliedA: return "Oklab_PremultipliedA";
case PrimitiveType::Oklab_StraightA: return "Oklab_StraightA";
case PrimitiveType::LinearRGB: return "LinearRGB";
case PrimitiveType::LinearRGB_PremultipliedA: return "LinearRGB_PremultipliedA";
case PrimitiveType::LinearRGB_StraightA: return "LinearRGB_StraightA";
case PrimitiveType::sRGB: return "sRGB";
case PrimitiveType::sRGB_PremultipliedA: return "sRGB_PremultipliedA";
case PrimitiveType::sRGB_StraightA: return "sRGB_StraightA";
case PrimitiveType::HSLuv: return "HSLuv";
case PrimitiveType::HSLuv_PremultipliedA: return "HSLuv_PremultipliedA";
case PrimitiveType::HSLuv_StraightA: return "HSLuv_StraightA"; 